@using  Generics.DataModels.Enums;
@model Tuple<List<WorkTask>, StatsModel>
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_Layout";
    var host = Context.Request.Scheme + "://" + Context.Request.Host;
    var todayDate = DateTime.Now.Date;
    var tomorrowDate = DateTime.Now.AddDays(1).Date;
    var IsCompleted = false;
    var overAll = ViewBag.OverAll;
    var week = ViewBag.Week;
    var month = ViewBag.Month;

    var time = (Generics.DataModels.Enums.TaskTimeFilter)ViewBag.TimeFilter;
    var status = (Generics.DataModels.Enums.TaskStatusFilter)ViewBag.StatusFilter;
    long data = 0;
    var count = 0;
    var tasks= new List<long>();
}
<div class="container-fluid">
    <partial name="_MemberStatsView" model="Model.Item2" />
    <div class="row clearfix">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="card project_list">
                <div class="pull-right" style="float:right;">
                    <button class="btn btn-success" disabled="@ViewBag.GenerateToday" onclick="GenerateTask()">Generate Task <i class="zmdi zdmi-plus"></i></button>
                    <button class="btn btn-success" disabled="@ViewBag.GenerateTomorrow" onclick="GenerateNextTask()">Generate tomorrow Task <i class="zmdi zdmi-plus"></i></button>
                </div>

                <div class="pull-left">
                    <a href="@(status == TaskStatusFilter.All ? "#" : $"/?time={(int)time}&status={(int)TaskStatusFilter.All}")" class="btn @(status == TaskStatusFilter.All ? "btn-info" : "")">All</a>
                    <a href="@(status == TaskStatusFilter.Done ? "#" : $"/?time={(int)time}&status={(int)TaskStatusFilter.Done}")" class="btn @(status == TaskStatusFilter.Done ? "btn-info" : "")">Done</a>
                    <a href="@(status == TaskStatusFilter.Pending ? "#" : $"/?time={(int)time}&status={(int)TaskStatusFilter.Pending}")" class="btn @(status == TaskStatusFilter.Pending ? "btn-info" : "")">Pending</a>
                </div>


                <div class="table-responsive">
                    <table class="table table-hover c_table">
                        <thead>
                            <tr>
                                <th>Project</th>
                                <th>Platforms</th>
                                <th>Scheduling Time</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var workTask in Model.Item1)
                            {
                                if (workTask.WorkTaskPlatforms.All(s => s.IsDesigned == true))
                                {
                                    IsCompleted = true;
                                }
                                else
                                {
                                    IsCompleted = false;
                                }
                                if (count == 0)
                                {
                                    count=1;
                                    data = workTask.ProjectId;
                                }
                                if (data == workTask.ProjectId && count==1)
                                {
                                    count++;
                                <tr style="@((IsCompleted) ? "background-color:#04BE5B" : "")">


                                    <td><strong>@workTask.ProjectName</strong></td>
                                    <td>
                                        @foreach (var plat in workTask.WorkTaskPlatforms)
                                        {
                                            tasks.Add(plat.WorkTaskId);
                                            if (plat.IsDesigned)
                                            {
                                                <span class="dot" style="background-color: #04BE5B;">
                                                    <i style="vertical-align: -webkit-baseline-middle;padding: 7px;" class="zmdi zmdi-@plat.PlatformIcon PlatformIcon" name="@plat.PlatformName@plat.WorkTaskId" value="@plat.Id" onclick="SwalOpen(@tasks,@plat.PlatformId)"></i>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="dot" style="background-color:gainsboro;">
                                                    <i style="vertical-align: -webkit-baseline-middle;padding: 7px;" class="zmdi zmdi-@plat.PlatformIcon PlatformIcon" name="@plat.PlatformName@plat.WorkTaskId" value="@plat.Id" onclick="SwalOpen(@plat.WorkTaskId,@plat.PlatformId)"></i>
                                                </span>
                                            }
                                        }
                                    </td>

                                    <td>
                                        <ul class="list-unstyled">
                                            @foreach (var sche in Model.Item1.Where(s => s.ProjectId == data))
                                            {
                                            <li><span class="btn btn-primary"> @sche.OnCreated.ToString(MMMM_dd_yyyy) @sche.ProjectSchedulingTime.ToString(hh_mm_tt)</span></li>
                                            }
                                        </ul>
                                    </td>
                                    <td>
                                        @if (IsCompleted)
                                        {
                                            <span class="badge badge-default">Design Done</span>

                                        }
                                        else
                                        {
                                            <span class="badge badge-warning">To Do</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!IsCompleted)
                                        {
                                            <span><i class="btn-sm btn btn-success" data-toggle="modal" data-target="#smallModal" onclick="GeneratePlatforms(@workTask.Id)">MarkAsDone</i></span>
                                        }
                                        <div class="my-component" id="@workTask.Id" data-options="@JsonConvert.SerializeObject(workTask.WorkTaskPlatforms)"></div>
                                    </td>
                                </tr>
                                }
                                else
                                {
                                    if (data != workTask.ProjectId)
                                    {
                                        count = 0;
                                    }
                                }

                            }
                        </tbody>
                    </table>
                    <div class="modal fade" id="smallModal" tabindex="-1" role="dialog">
                        <div class="modal-dialog modal-sm" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="title" id="smallModalLabel">Paltforms</h4>
                                </div>
                                <div class="modal-body" id="myPlatforms">
                                    <!--data will be append-->

                                </div>
                                <button type="button" onclick="selectAll()">Select All</button>
                                <div class="modal-footer">
                                    <button type="button" onclick="SwalPlatformsOpen()" class="btn btn-info btn-round waves-effect">Updates</button>
                                    <button type="button" class="btn btn-default btn-round waves-effect" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
