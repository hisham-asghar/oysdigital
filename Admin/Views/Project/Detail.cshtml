@model Generics.DataModels.AdminModels.Project
@{
    ViewData["Title"] = "Project Detail";
    Layout = "_Layout";
    var host = Context.Request.Scheme + "://" + Context.Request.Host;
    var myobj = (Dictionary<int, string>)ViewBag.PlatformDictionary;
    var data1="";
}
<div class="block-header">
    <div class="row">
        <div class="col-lg-7 col-md-6 col-sm-12">
            <h2>Project Detail</h2>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row clearfix">
        <div class="col-xl-4 col-lg-12 col-md-12">
            <div class="card mcard_3 shadow p-3 mb-5 bg-white rounded">
                <div class="body">
                    <a href="profile.html"><img src="/images/profile_av.jpg" class="rounded-circle" alt="profile-image"></a>
                    <h4 class="m-t-10">@Model.Name</h4>
                    <h5 class="m-t-10">Created: @Model.OnModified.ToString(MMMM_dd_yyyy)</h5>
                </div>
            </div>
            <div class="card shadow p-3 mb-5 bg-white rounded">
                <div class="header">
                    <div class="row">
                        <div class="col-md-6">
                            <h2><strong>Members</strong></h2>
                        </div>
                        <div class="col-md-6">
                            <div class="pull-right">
                                @ButtonHelper.Create($"/ProjectMembers/Create?projectId={Model.Id}&returnUrl=/Project/Detail/{Model.Id}")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="responsive">
                    <table class="table table-hover c_table">
                        <tbody>
                            @foreach (var item in Model.ProjectMembers)
                            {
                                <tr>
                                    <td>
                                        <div style="width:50px;height:auto" class="rounded-circle">
                                            <img src="/images/profile_av.jpg" class="img-fluid" alt="">
                                        </div>
                                    </td>
                                    <td>
                                        <ul class="social-links list-unstyled">
                                            <li><span>@item.MemberName</span></li>
                                            <li><span class="text-muted">@item.MemberType</span></li>
                                        </ul>
                                    </td>
                                    <td>
                                        <a href="/ProjectMembers/ConfirmDelete/@item.Id&returnUrl=/Project/Detail/{@Model.Id}" role="button" class="btn btn-sm btn-danger btn-round text-white"><i class="zmdi zmdi-delete"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
        <div class="col-xl-8 col-lg-12 col-md-12">
            <div class="row clearfix">
                <div class="col-md-12 col-sm-12">
                    <div class="card shadow p-3 mb-5 bg-white rounded">
                        <div class="header">
                            <div class="row">
                                <div class="col-md-6">
                                    <h2><strong>Platform</strong></h2>
                                </div>
                                <div class="col-md-6">
                                    <div class="pull-right">
                                        <button class="btn btn-success float-right" onclick="Process(@Model.Id)"><i class="zdmi zdmi-plus"></i> Add Platforms</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="responsive">
                            <table class="table table-hover c_table">
                                <tbody>
                                   
                                    <tr>
                                        @foreach (var item in Model.Platforms)
                                        {
                                            <td>
                                                <button type="button" class="btn"><i class="@item.IconClass"></i> @item.Name </button>
                                            </td>
                                        }
                                        </tr>
                                   
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card shadow p-3 mb-5 bg-white rounded">
                        <div class="header">
                            <div class="row">
                                <div class="col-md-6">
                                    <h2><strong>Project Task</strong></h2>
                                </div>
                                <div class="col-md-6">
                                    <div class="pull-right">
                                        @ButtonHelper.Create($"/ProjectPlatform/Create?projectId={Model.Id}&returnUrl=/Project/Detail/{Model.Id}")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="responsive">
                            <table class="table table-hover c_table">
                                @*<tbody>
                                    @foreach (var item in Model.ProjectPlatforms)
                                    {
                                        <tr>
                                            <td>
                                                <div class="hover-zoom-effect social-widget @item.PlatformName-widget">
                                                        <span class="icon"><i class="@item."></i></span>
                                                        <span class="text-muted"></span>
                                                        <span class="list-name"></span>
                                                        <span class="text-muted"></span>
                                                    </div>
                                            </td>
                                            <td>
                                                @if (item.IsActive)
                                                {
                                                    <span class="badge badge-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger">In Active</span>
                                                }
                                                <a role="button" class="btn btn-sm btn-primary btn-round text-white"><i class="zmdi zmdi-edit"></i></a>
                                                <a role="button" class="btn btn-sm btn-danger btn-round text-white"><i class="zmdi zmdi-delete"></i></a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>*@
                            </table>
                        </div>
                    </div>
                    <div class="card shadow p-3 mb-5 bg-white rounded">
                        <div class="header">
                            <div class="row">
                                <div class="col-md-6">
                                    <h2><strong>Notes</strong></h2>
                                </div>
                                <div class="col-md-6">
                                    <div class="pull-right">
                                        @ButtonHelper.Create($"/ProjectNotes/Create?projectId={Model.Id}&returnUrl=/Project/Detail/{Model.Id}")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="responsive">
                            <table class="table c_table inbox_table">
                                @foreach (var item in Model.ProjectNotes)
                                {
                                    <tr>
                                        <td style="vertical-align: top;text-align: left;">
                                            <p>@item.Message bilal saleem</p>
                                        </td>
                                        <td class="time">
                                            <ul class="social-links list-unstyled">
                                                <li><span>@item.OnCreated.ToString("MMM dd,yy")</span></li>
                                                <li><span class="text-muted">@item.OnCreated.ToString(HH_mm_ss)</span></li>
                                                <li><span class="badge text-white" style="background-color:@item.LabelColor">@item.LabelName</span></li>
                                            </ul>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                    <div class="card shadow p-3 mb-5 bg-white rounded">
                        <div class="header">
                            <div class="row">
                                <div class="col-md-6">
                                    <h2><strong>Alert Messages</strong></h2>
                                </div>
                                <div class="col-md-6">
                                    <div class="pull-right">
                                        @ButtonHelper.Create($"/ProjectAlertMessage/Create?projectId={Model.Id}&returnUrl=/Project/Detail/{Model.Id}")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="responsive">
                            <table class="table c_table inbox_table">
                                @foreach (var item in Model.ProjectAlertMessages)
                                {
                                    <tr>
                                        <td style="vertical-align: top;text-align: left;">
                                            <p>@item.Message</p>
                                        </td>
                                        <td class="time">
                                            <ul class="social-links list-unstyled">
                                                <li><span>@item.OnCreated.ToString("MMM dd,yy")</span></li>
                                                <li><span class="text-muted">@item.OnCreated.ToString(HH_mm_ss)</span></li>
                                                <li><span class="badge text-white" style="background-color:@item.LabelColor">@item.LabelName</span></li>
                                            </ul>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
<script>

    async function Process(id) {
        var platforms = [];
        var mobileSpaces = [];
        $.ajax({
        type: 'GET',
            url: "@host" +"/Json/Getplatforms",
        dataType: 'json',
            success: function (data) {
                platforms = data;
        }
        });
        $.ajax({
        type: 'GET',
            url: "@host" +"/Json/GetMobileSpaces",
        dataType: 'json',
            success: function (data) {
                mobileSpaces = data;
        }
        });
    var ProjectView={
        PlatformType:'',
        Quantity: 0,
        ProjectId:id,
        MobileSpaceId:0,
        ProjectPlatforms:[],
        PlatformSchedulers:[],
        StoryType:0,
        Link:''
    }
    const inputOptions = new Promise((resolve) => {
      setTimeout(() => {
        resolve({
          'Post': 'Post',
          'Stories': 'Stories'
        })
      }, 1000)
    })
    await Swal.fire({
      title: 'Select color',
      input: 'radio',
        inputOptions: inputOptions,
     
      inputValidator: (value) => {
        if (!value) {
          return 'You need to choose Type!'
        }else{
            ProjectView.PlatformType=value;
        }
      }
    })
    var platformsLink="<div class='form-group'><input type='text' required placeholder='Platform Link' class='form-control' id='link'></div>";
        var platformshtml = "";
        var mobilespaceshtml = "";
        for (var x = 0; x < platforms.length;x++) {
            platformshtml += "<div class='form-group'><input id='checkbox' value='" + platforms[x].id + "'  name='swal-platform-checkboxes' type='checkbox'>" + platforms[x].name+"</div></br>";
        }
        for (var x = 0; x < mobileSpaces.length; x++) {
            mobilespaceshtml += "<option value=" + mobileSpaces[x].id + ">" + mobileSpaces[x].name+"</option>";
        }
        mobilespaceshtml = "<div class='form-group'><select class='form-control show-tick' id='MobileSpaces'>" + mobilespaceshtml + "</select></div>";
        platformshtml = mobilespaceshtml+platformsLink+platformshtml;
        platformshtml+="<button class='btn btn-success' onclick='selectall()'>Select All</button>";
        if(ProjectView.PlatformType=="Stories")
        {
            var selectstory ="<select class='form-control show-tick' id='StoryType'><option value='0' selected>Story Per Day</option><option value='1'>Story Per Week</option><option value='2'>Story Per Month</option></select>"
            platformshtml="<div class='form-group'>"+selectstory+"</div><div>"+platformshtml+"</div>";
        }

    await Swal.fire({
      title: 'Platforms',
        html: platformshtml,
        allowOutsideClick: false,
      inputValidator: (value) => {
        if (!value) {
          return 'You need to choose something!'
        }
      }
    }).then(() => {
        if (ProjectView.PlatformType == "Stories") {
           ProjectView.StoryType= $('#StoryType').val();
        }
        var inputElements = document.getElementsByName('swal-platform-checkboxes');
       for(var i=0; inputElements[i]; ++i){
          if(inputElements[i].checked){
               ProjectView.ProjectPlatforms.push(inputElements[i].value);
           }
        }
        ProjectView.MobileSpaceId = $('#MobileSpaces').val();
        ProjectView.Link= $('#link').val();
    })

    await Swal.fire({
      title: 'Select quantity',
      icon: 'question',
        input: 'range',
        allowOutsideClick: false,
      inputAttributes: {
        min: 1,
        max: 50,
        step: 1
      },
      inputValue: 1
    }).then((result)=>{
        ProjectView.Quantity=result.value;
    })
    var schedulerhtml="";
    for (var x=0;x<ProjectView.Quantity;x++) {
     schedulerhtml+="<div class='input-group'><div class='input-group-prepend'><span class='input-group-text'><i class='zmdi zmdi-time'></i></span></div><input type='text' class='form-control timepicker' placeholder='Please choose a time...'></div></br>";
    }

    await Swal.fire({
      title: 'Select time',
        html: schedulerhtml,
        allowOutsideClick: false,
    }).then((accept) => {
        var inputElements = document.getElementsByClassName('timepicker');
       for(var i=0; inputElements[i]; ++i){
               ProjectView.PlatformSchedulers.push(inputElements[i].value);
    }
    }).then((result) => {
      $.ajax({ // ajax call starts
          url: "@host" +"/ProjectPlatform/Create",
                    type: 'post',
                    data: ProjectView,
                    success: function(d)
                    {
                        swal("Your request has been received!", "We will contact you for confirmation soon", "success");

                    }

                });
    });
    console.log(ProjectView);
    }
    function selectall(){
      var inputs = document.getElementsByClassName('swal-platform-checkboxes');
      for(var i=0; inputs[i]; ++i){
          inputs[i].checked=true;
      }
    }
</script>